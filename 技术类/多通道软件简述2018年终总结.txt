多通道软件简述

一、 新平台框架
旧软件是用pascal语言，在delphi7集成开发平台进行开发的VLC模块化架构的程序软件，数据库使用的是BDE引擎的paradox数据库。

主要存在几个问题：
1. 程序被多人多年修改，原来的程序结构臃肿且混乱，阅读和改写的难度随着时间增加不断的增长
2. 原来的模块化架构，把业务逻辑和界面逻辑，甚至是数据交互逻辑都混在一起，导致代码凌乱
3. 软件中大量使用第三方库，大部分已经不再进行维护和更新
4. delphi7盗版系统，本身就不稳定，存在bug
5. vlc开发环境，直接对内存地址的操作模式，为开发和调试带来大量的隐患
6. pacal语言产生于半个世纪前，很多新生代的编程理念没有对应的实施框架

新编程架构描述：
新的软件是使用.net编程环境，使用免费的vs 2017集成环境开发， 使用C#作为编程语言，界面使用WCF的MVVM结构搭建，数据库使用开源MySql，并使用微软官方的ORM架构的entity framework进行数据库的管理和交互。

主要优点：
1. c#语言是吸收的基于java语言以及近些年发展起来的一些编程基础理论的优点，核心已经迭代到7.0，拥有排丰富的类库提供使用，而且还在由微软不停的升级中，里面激动人心的linq技术、无处不在的泛型技术、异步操作技术等等，不仅是功能上的强大，更增加了代码的优雅度。
2. 微软官方的ORM框架与C#紧密结合，减少了一部分环境配置的麻烦
3. MySql作为活跃的顶级开源数据库，不论是单机，还是为以后开发局域网甚至是分布式数据库系统提供了可能
4. WCF是开发windows平台软件最好的选择之一，天生对界面逻辑和业务逻辑的分离，新定义的属性关联、路由事件等技术，为建立高内聚、低耦合的软件架构打下了良好的基础。 WCF在最新的.net core上已经实现了跨平台支持，并实现开源，使得以后向linux、Android或mac os系统移植，成为可能。

二、 多通道软件
多通道软件在原来双通道软件开发的经验上进行重新设计
1. 重新设计的操作逻辑和流程
原来的双通道操作逻辑，如果搬到多通道软件上，会增加一倍的操作繁琐度，我们简化了步骤，尽可能增加每个界面的信息量，也尽可能保留原软件的一些影子，降低医护人员学习新软件的门槛。
2. 重新设计了数据库结构
新软件由于是多人多课程设计，在原来的双通道课程存储之上，增加了“课程组”这一层。原来数据库有很多冗余的信息，可能是数据库升级、或者是以空间换取性能的考虑设计，新的软件，把肌电信息、课程信息等保存在一个二进制表中，软件中呈现的数据，都以算法的形式，即时计算出来。
3. 重新设计了分类方法
课程单元、双通道课程、多通道课程组、界面分布等很多地方，都根据原软件和市场部门的反馈，做了大量调整。
4. 重新建立封装
要重新建立抽象逻辑库。例如与下位机交互，原代码是在界面建立串口控件，建立计时器控件，直接对控件进行逻辑操作。新软件要对这些操作进行重新抽象和封装，建立api库。类似的操作还包括打印、本地信息存储、网络交互等。
5. 建立软件国际化机制
为多语言切换进行代码和数据存储方面的准备

可能出现的问题：
1. 我们软件的性能瓶颈，大多出现在肌电反馈治疗界面，如果新软件进行8通道运行时，硬件可能会承载巨大压力，新软件完成后，有可能需要对cpu等核心运存进行必要的升级。
2. 新的软件框架，我们已经安装在原始台机硬件环境，Win10操作系统上进行了测试，运行比较流畅，没有问题，但由于第1条提到的功能还没有最后实现，峰值测试无法进行，硬件能力是否足够，还是存在担忧。
3. 由于软件并没有医护人员和前方销售部门提供理论和实践支持，我们都是在原有软件的基础上和大家有限的观摩其它公司的产品的基础上，通过艰难的不断的讨论设计出来的（其实现在每天还要经常的进行讨论），市场接受度未知。